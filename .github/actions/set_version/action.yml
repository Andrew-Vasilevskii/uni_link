name: 'set version'
inputs:
  version:
    type: string
    required: true
    default: "current"
    description: "Version which should be used. If 'current' is used the version in pubspec.yaml will be used."
  increase_build_number:
    type: boolean
    required: true
    description: "If true the buildnumber will be increased by one."
  tag_prefix:
    type: boolean
    requried: true
    description: "Prefix which should be used for the tag."

description: 'increases the buildnumber by one if increase_build_number and set the version in pubspec, pushes, and tag the changes'
runs:
  using: "composite"
  steps:
    - name: Extract version
      id: extract-version
      shell: bash
      env:
        FILE: "pubspec.yaml"
      run: |
        VALUE=$(grep '^version:' "$FILE" | cut -d':' -f2 | tr -d ' ')
        VERSION="${VALUE%%+*}"
        BUILD_NUMBER="${VALUE##*+}"
        
        echo "CURRENT_VERSION=$VERSION" >> "$GITHUB_OUTPUT"
        echo "CURRENT_BUILD=$BUILD_NUMBER" >> "$GITHUB_OUTPUT"

    - name: Decide version bump
      id: bump
      shell: bash
      env:
        CURRENT_VALUE: "current"
        INPUT_VERSION: ${{ inputs.version }}
        CURRENT_VERSION: ${{ steps.extract-version.outputs.CURRENT_VERSION }}
        CURRENT_BUILD: ${{ steps.extract-version.outputs.CURRENT_BUILD }}
        INCREASE_BUILD_NUMBER: ${{ inputs.increase_build_number }}
      run: |                
        # Decide new version
        NEW_VERSION="$INPUT_VERSION"
        if [ "$INPUT_VERSION" = $CURRENT_VALUE ]; then
          NEW_VERSION="$CURRENT_VERSION"
        fi
        
        # Decide new build
        NEW_BUILD="$CURRENT_BUILD"
        if $INCREASE_BUILD_NUMBER; then
          NEW_BUILD=$((CURRENT_BUILD + 1))
        fi
        
        echo "NEW BUILD $NEW_BUILD"
        # Decide if anything changed
        if [ "$NEW_VERSION" != "$CURRENT_VERSION" ] || [ "$NEW_BUILD" != "$CURRENT_BUILD" ]; then
         SHOULD_CHANGE=true
        else
         SHOULD_CHANGE=false
        fi
                
        echo "SHOULD_CHANGE $SHOULD_CHANGE"
        echo "NEW_VERSION=$NEW_VERSION" >> "$GITHUB_OUTPUT"
        echo "NEW_BUILD_NUMBER=$NEW_BUILD" >> "$GITHUB_OUTPUT"
        echo "SHOULD_CHANGE=$SHOULD_CHANGE" >> "$GITHUB_OUTPUT"

    - name: extract buildnumber
      id: buildnumber
      shell: bash
      if: ${{ steps.update.outputs.SHOULD_CHANGE == 'true' }}
      run: |
        echo "CHANGING"
        echo "${{ steps.update.outputs.NEW_VERSION}}"
        echo "${{ steps.update.outputs.NEW_BUILD_NUMBER}}"
#        buildnumber=$(cat pubspec.yaml | grep 'version: [ 0-9\. ]*+[ 0-9 ]*' | cut -d "+" -f 2 | tr -d '[:cntrl:]')
#        if [[ ${{ inputs.increase_build_number }} ]]; then
#          ((buildnumber++))
#        fi
#        echo "buildnumber=$buildnumber" >> $GITHUB_OUTPUT
#    - name: set version in pubspec and tag
#      shell: bash
#      run: |
#        sed -i -E "s/version: .*$/version: ${{ inputs.version }}+${{ steps.buildnumber.outputs.buildnumber }}/" pubspec.yaml
#        git config --global user.name 'github action'
#        git config --global user.email 'developer@hansefit.de'
#        git commit -am "${{ inputs.version }} ${{ steps.buildnumber.outputs.buildnumber }}" || true
#        git tag "${{ inputs.tag_prefix }}-${{ inputs.version }}(${{ steps.buildnumber.outputs.buildnumber }})"
#        git push || true
        
      


